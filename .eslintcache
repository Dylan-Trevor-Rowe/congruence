[{"/Users/ardisred/Workspace/congruence/src/index.js":"1","/Users/ardisred/Workspace/congruence/src/App.js":"2","/Users/ardisred/Workspace/congruence/src/reportWebVitals.js":"3","/Users/ardisred/Workspace/congruence/src/MainPage.js":"4"},{"size":504,"mtime":1611609361404,"results":"5","hashOfConfig":"6"},{"size":252,"mtime":1611609361400,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611609361405,"results":"8","hashOfConfig":"6"},{"size":1910,"mtime":1611612440211,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"fzwdfm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/ardisred/Workspace/congruence/src/index.js",[],["21","22"],"/Users/ardisred/Workspace/congruence/src/App.js",["23"],"import { Route, BrowserRouter } from \"react-router-dom\"\nimport React from \"react\"\nimport { MainPage } from './MainPage'\n\n\nexport const App = (props) => {\n\n  return <>\n      <BrowserRouter>\n\n        <MainPage {...props} />\n      </BrowserRouter>\n  </>\n}","/Users/ardisred/Workspace/congruence/src/reportWebVitals.js",[],"/Users/ardisred/Workspace/congruence/src/MainPage.js",["24"],"\nimport React from 'react'\nimport { useState } from 'react'\nimport './App.css';\nimport Body from './illust57-4505.jpg'\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal'\n\nexport function MainPage(props) {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const handleControlledInputChange = (e) => {\n        var x = e.clientX;\n        var y = e.clientY;\n        var coor = \"X coords: \" + x + \", Y coords: \" + y;\n        if (x >= 401 && x <= 482 && y >= 62 && y <= 181){\n            handleShow();\n        }\n        console.log(coor)\n    }\n\n    return <>\n    <div>\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Body>   <div className=\"headMenu\">\n                    <ListGroup>\n                        <ListGroup.Item>Cras justo odio</ListGroup.Item>\n                        <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n                        <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n                        <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                        <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n                    </ListGroup>\n                </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n            </Button>\n                </Modal.Footer>\n            </Modal></div>\n        <div onClick={handleControlledInputChange} className=\"fullScreen\">\n            <img onClick={handleControlledInputChange} className=\"bodyImage\" src={Body}></img>\n        </div>\n    </>\n}\n\n\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":15},{"ruleId":"33","severity":1,"message":"34","line":49,"column":13,"nodeType":"35","endLine":49,"endColumn":89},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]